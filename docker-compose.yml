version: "3.8"
services:
  
  
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - 8020:8020
    volumes:
      - ./user-service:/user-service-app
    networks:
      default:
        aliases:
          - user
  
  
  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    command: python3 server.py
    stop_signal: SIGKILL
    ports:
      - 8050:8050
    volumes:
      - ./analytics-service:/analytics-service-app
    networks:
      default:
        aliases:
          - analytics
  
  
  problem-service:
    build:
      context: ./problem-service
      dockerfile: Dockerfile
    stop_signal: SIGKILL
    command: python3 server.py
    ports:
      - 8040:8040
    volumes:
      - ./problem-service:/problem-service-app
    networks:
      default:
        aliases:
          - problem
  
  
  game-service:
    build:
      context: ./game-service
      dockerfile: Dockerfile
    ports:
      - 8030:8030
    volumes:
      - ./game-service:/game-service-app
    networks:
      default:
        aliases:
          - game
    depends_on:
      - problem-service
      - analytics-service
  
  
  api-gateway-service:
    build:
      context: ./api-gateway-service
      dockerfile: Dockerfile
    ports:
      - 8010:8010
    volumes:
      - ./api-gateway-service:/api-gateway-service-app
    networks:
      default:
        aliases:
          - api
    depends_on:
      - user-service
  
  
  front-end:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    environment:
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - 3000:3000
    volumes:
      - ./front-end:/front-end-app
      - /front-end-app/node_modules
    
